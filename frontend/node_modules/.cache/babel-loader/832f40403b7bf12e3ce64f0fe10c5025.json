{"ast":null,"code":"var _jsxFileName = \"/Users/kristin/Desktop/hotel-prins-carl/frontend/src/components/GuestBookEntry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { baseUrl } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GuestBookEntry = _ref => {\n  _s();\n\n  let {\n    id,\n    message,\n    likes,\n    createdAt\n  } = _ref;\n  const [likedByMe, setLikedByMe] = useState(false);\n  const [likesCounter, setLikes] = useState(likes);\n\n  const sendHeartToApi = () => {\n    fetch(`${baseUrl}/guestbook/${id}/like`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      // Fetch the number of hearts fresh from API\n      setLikes(data.likes);\n    });\n  };\n\n  const addHeart = () => {\n    setLikedByMe(true); // Skip posting you have already liked something once\n\n    if (!likedByMe) {\n      setHearts(heartsCounter + 1);\n      sendHeartToApi();\n    }\n  };\n\n  const formattedDate = moment(createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ');\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"happy-thoughts-entry\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"happy-thoughts-entry-text\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"likes-and-time-stamp\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"happy-thoughts-entry-heart-counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: likedByMe ? ' button-likes has-likes' : 'button-likes no-likes',\n          onClick: addHeart,\n          type: \"button\",\n          children: \"\\u2764\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \"x \", heartsCounter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"happy-thoughts-entry-date-stamp\",\n        children: formattedDate.fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GuestBookEntry, \"B956Aj1icw0CdiEgQKREvlj3MUE=\");\n\n_c = GuestBookEntry;\nexport default GuestBookEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuestBookEntry\");","map":{"version":3,"names":["React","useState","moment","baseUrl","GuestBookEntry","id","message","likes","createdAt","likedByMe","setLikedByMe","likesCounter","setLikes","sendHeartToApi","fetch","method","headers","then","res","json","data","addHeart","setHearts","heartsCounter","formattedDate","fromNow"],"sources":["/Users/kristin/Desktop/hotel-prins-carl/frontend/src/components/GuestBookEntry.js"],"sourcesContent":["import React, { useState } from 'react'\n\nimport moment from 'moment'\n\nimport { baseUrl } from '../config'\n\nconst GuestBookEntry = ({ id, message, likes, createdAt }) => {\n  const [likedByMe, setLikedByMe] = useState(false)\n  const [likesCounter, setLikes] = useState(likes)\n\n  const sendHeartToApi = () => {\n    fetch(`${baseUrl}/guestbook/${id}/like`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then((res) => res.json())\n      .then((data) => {\n        // Fetch the number of hearts fresh from API\n        setLikes(data.likes);\n      })\n  }\n\n  const addHeart = () => {\n    setLikedByMe(true)\n    // Skip posting you have already liked something once\n    if (!likedByMe) {\n      setHearts(heartsCounter + 1)\n      sendHeartToApi()\n    }\n  }\n\n  const formattedDate = moment(\n    createdAt,\n    'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  )\n\n  return (\n    <article className=\"happy-thoughts-entry\">\n      <p className=\"happy-thoughts-entry-text\">{message}</p>\n      <div className=\"likes-and-time-stamp\">\n        <span className=\"happy-thoughts-entry-heart-counter\">\n          <button className={likedByMe ? ' button-likes has-likes' : 'button-likes no-likes'} onClick={addHeart} type=\"button\">\n            ❤️\n          </button>\n          x {heartsCounter}\n        </span>\n        <span className=\"happy-thoughts-entry-date-stamp\">{formattedDate.fromNow()}</span>\n      </div>\n    </article>\n  )\n}\n\nexport default GuestBookEntry"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,MAAMC,cAAc,GAAG,QAAuC;EAAA;;EAAA,IAAtC;IAAEC,EAAF;IAAMC,OAAN;IAAeC,KAAf;IAAsBC;EAAtB,CAAsC;EAC5D,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACU,YAAD,EAAeC,QAAf,IAA2BX,QAAQ,CAACM,KAAD,CAAzC;;EAEA,MAAMM,cAAc,GAAG,MAAM;IAC3BC,KAAK,CAAE,GAAEX,OAAQ,cAAaE,EAAG,OAA5B,EAAoC;MACvCU,MAAM,EAAE,MAD+B;MAEvCC,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAF8B,CAApC,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,IAAD,IAAU;MACd;MACAR,QAAQ,CAACQ,IAAI,CAACb,KAAN,CAAR;IACD,CAPH;EAQD,CATD;;EAWA,MAAMc,QAAQ,GAAG,MAAM;IACrBX,YAAY,CAAC,IAAD,CAAZ,CADqB,CAErB;;IACA,IAAI,CAACD,SAAL,EAAgB;MACda,SAAS,CAACC,aAAa,GAAG,CAAjB,CAAT;MACAV,cAAc;IACf;EACF,CAPD;;EASA,MAAMW,aAAa,GAAGtB,MAAM,CAC1BM,SAD0B,EAE1B,0BAF0B,CAA5B;EAKA,oBACE;IAAS,SAAS,EAAC,sBAAnB;IAAA,wBACE;MAAG,SAAS,EAAC,2BAAb;MAAA,UAA0CF;IAA1C;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,sBAAf;MAAA,wBACE;QAAM,SAAS,EAAC,oCAAhB;QAAA,wBACE;UAAQ,SAAS,EAAEG,SAAS,GAAG,yBAAH,GAA+B,uBAA3D;UAAoF,OAAO,EAAEY,QAA7F;UAAuG,IAAI,EAAC,QAA5G;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,QAIKE,aAJL;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAM,SAAS,EAAC,iCAAhB;QAAA,UAAmDC,aAAa,CAACC,OAAd;MAAnD;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA3CD;;GAAMrB,c;;KAAAA,c;AA6CN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}