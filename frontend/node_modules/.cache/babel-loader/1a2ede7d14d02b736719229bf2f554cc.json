{"ast":null,"code":"const dangerouslyDisableDefaultSrc = Symbol(\"dangerouslyDisableDefaultSrc\");\nconst DEFAULT_DIRECTIVES = {\n  \"default-src\": [\"'self'\"],\n  \"base-uri\": [\"'self'\"],\n  \"font-src\": [\"'self'\", \"https:\", \"data:\"],\n  \"form-action\": [\"'self'\"],\n  \"frame-ancestors\": [\"'self'\"],\n  \"img-src\": [\"'self'\", \"data:\"],\n  \"object-src\": [\"'none'\"],\n  \"script-src\": [\"'self'\"],\n  \"script-src-attr\": [\"'none'\"],\n  \"style-src\": [\"'self'\", \"https:\", \"'unsafe-inline'\"],\n  \"upgrade-insecure-requests\": []\n};\n\nconst getDefaultDirectives = () => Object.assign({}, DEFAULT_DIRECTIVES);\n\nconst dashify = str => str.replace(/[A-Z]/g, capitalLetter => \"-\" + capitalLetter.toLowerCase());\n\nconst isDirectiveValueInvalid = directiveValue => /;|,/.test(directiveValue);\n\nconst has = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key);\n\nfunction normalizeDirectives(options) {\n  const defaultDirectives = getDefaultDirectives();\n  const {\n    useDefaults = true,\n    directives: rawDirectives = defaultDirectives\n  } = options;\n  const result = new Map();\n  const directiveNamesSeen = new Set();\n  const directivesExplicitlyDisabled = new Set();\n\n  for (const rawDirectiveName in rawDirectives) {\n    if (!has(rawDirectives, rawDirectiveName)) {\n      continue;\n    }\n\n    if (rawDirectiveName.length === 0 || /[^a-zA-Z0-9-]/.test(rawDirectiveName)) {\n      throw new Error(`Content-Security-Policy received an invalid directive name ${JSON.stringify(rawDirectiveName)}`);\n    }\n\n    const directiveName = dashify(rawDirectiveName);\n\n    if (directiveNamesSeen.has(directiveName)) {\n      throw new Error(`Content-Security-Policy received a duplicate directive ${JSON.stringify(directiveName)}`);\n    }\n\n    directiveNamesSeen.add(directiveName);\n    const rawDirectiveValue = rawDirectives[rawDirectiveName];\n    let directiveValue;\n\n    if (rawDirectiveValue === null) {\n      if (directiveName === \"default-src\") {\n        throw new Error(\"Content-Security-Policy needs a default-src but it was set to `null`. If you really want to disable it, set it to `contentSecurityPolicy.dangerouslyDisableDefaultSrc`.\");\n      }\n\n      directivesExplicitlyDisabled.add(directiveName);\n      continue;\n    } else if (typeof rawDirectiveValue === \"string\") {\n      directiveValue = [rawDirectiveValue];\n    } else if (!rawDirectiveValue) {\n      throw new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`);\n    } else if (rawDirectiveValue === dangerouslyDisableDefaultSrc) {\n      if (directiveName === \"default-src\") {\n        directivesExplicitlyDisabled.add(\"default-src\");\n        continue;\n      } else {\n        throw new Error(`Content-Security-Policy: tried to disable ${JSON.stringify(directiveName)} as if it were default-src; simply omit the key`);\n      }\n    } else {\n      directiveValue = rawDirectiveValue;\n    }\n\n    for (const element of directiveValue) {\n      if (typeof element === \"string\" && isDirectiveValueInvalid(element)) {\n        throw new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`);\n      }\n    }\n\n    result.set(directiveName, directiveValue);\n  }\n\n  if (useDefaults) {\n    Object.entries(defaultDirectives).forEach(_ref => {\n      let [defaultDirectiveName, defaultDirectiveValue] = _ref;\n\n      if (!result.has(defaultDirectiveName) && !directivesExplicitlyDisabled.has(defaultDirectiveName)) {\n        result.set(defaultDirectiveName, defaultDirectiveValue);\n      }\n    });\n  }\n\n  if (!result.size) {\n    throw new Error(\"Content-Security-Policy has no directives. Either set some or disable the header\");\n  }\n\n  if (!result.has(\"default-src\") && !directivesExplicitlyDisabled.has(\"default-src\")) {\n    throw new Error(\"Content-Security-Policy needs a default-src but none was provided. If you really want to disable it, set it to `contentSecurityPolicy.dangerouslyDisableDefaultSrc`.\");\n  }\n\n  return result;\n}\n\nfunction getHeaderValue(req, res, normalizedDirectives) {\n  let err;\n  const result = [];\n  normalizedDirectives.forEach((rawDirectiveValue, directiveName) => {\n    let directiveValue = \"\";\n\n    for (const element of rawDirectiveValue) {\n      directiveValue += \" \" + (element instanceof Function ? element(req, res) : element);\n    }\n\n    if (!directiveValue) {\n      result.push(directiveName);\n    } else if (isDirectiveValueInvalid(directiveValue)) {\n      err = new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`);\n    } else {\n      result.push(`${directiveName}${directiveValue}`);\n    }\n  });\n  return err ? err : result.join(\";\");\n}\n\nconst contentSecurityPolicy = function contentSecurityPolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerName = options.reportOnly ? \"Content-Security-Policy-Report-Only\" : \"Content-Security-Policy\";\n  const normalizedDirectives = normalizeDirectives(options);\n  return function contentSecurityPolicyMiddleware(req, res, next) {\n    const result = getHeaderValue(req, res, normalizedDirectives);\n\n    if (result instanceof Error) {\n      next(result);\n    } else {\n      res.setHeader(headerName, result);\n      next();\n    }\n  };\n};\n\ncontentSecurityPolicy.getDefaultDirectives = getDefaultDirectives;\ncontentSecurityPolicy.dangerouslyDisableDefaultSrc = dangerouslyDisableDefaultSrc;\nconst ALLOWED_POLICIES$2 = new Set([\"require-corp\", \"credentialless\"]);\n\nfunction getHeaderValueFromOptions$7(_ref2) {\n  let {\n    policy = \"require-corp\"\n  } = _ref2;\n\n  if (ALLOWED_POLICIES$2.has(policy)) {\n    return policy;\n  } else {\n    throw new Error(`Cross-Origin-Embedder-Policy does not support the ${JSON.stringify(policy)} policy`);\n  }\n}\n\nfunction crossOriginEmbedderPolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$7(options);\n  return function crossOriginEmbedderPolicyMiddleware(_req, res, next) {\n    res.setHeader(\"Cross-Origin-Embedder-Policy\", headerValue);\n    next();\n  };\n}\n\nconst ALLOWED_POLICIES$1 = new Set([\"same-origin\", \"same-origin-allow-popups\", \"unsafe-none\"]);\n\nfunction getHeaderValueFromOptions$6(_ref3) {\n  let {\n    policy = \"same-origin\"\n  } = _ref3;\n\n  if (ALLOWED_POLICIES$1.has(policy)) {\n    return policy;\n  } else {\n    throw new Error(`Cross-Origin-Opener-Policy does not support the ${JSON.stringify(policy)} policy`);\n  }\n}\n\nfunction crossOriginOpenerPolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$6(options);\n  return function crossOriginOpenerPolicyMiddleware(_req, res, next) {\n    res.setHeader(\"Cross-Origin-Opener-Policy\", headerValue);\n    next();\n  };\n}\n\nconst ALLOWED_POLICIES = new Set([\"same-origin\", \"same-site\", \"cross-origin\"]);\n\nfunction getHeaderValueFromOptions$5(_ref4) {\n  let {\n    policy = \"same-origin\"\n  } = _ref4;\n\n  if (ALLOWED_POLICIES.has(policy)) {\n    return policy;\n  } else {\n    throw new Error(`Cross-Origin-Resource-Policy does not support the ${JSON.stringify(policy)} policy`);\n  }\n}\n\nfunction crossOriginResourcePolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$5(options);\n  return function crossOriginResourcePolicyMiddleware(_req, res, next) {\n    res.setHeader(\"Cross-Origin-Resource-Policy\", headerValue);\n    next();\n  };\n}\n\nfunction parseMaxAge$1() {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  if (value >= 0 && Number.isFinite(value)) {\n    return Math.floor(value);\n  } else {\n    throw new Error(`Expect-CT: ${JSON.stringify(value)} is not a valid value for maxAge. Please choose a positive integer.`);\n  }\n}\n\nfunction getHeaderValueFromOptions$4(options) {\n  const directives = [`max-age=${parseMaxAge$1(options.maxAge)}`];\n\n  if (options.enforce) {\n    directives.push(\"enforce\");\n  }\n\n  if (options.reportUri) {\n    directives.push(`report-uri=\"${options.reportUri}\"`);\n  }\n\n  return directives.join(\", \");\n}\n\nfunction expectCt() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$4(options);\n  return function expectCtMiddleware(_req, res, next) {\n    res.setHeader(\"Expect-CT\", headerValue);\n    next();\n  };\n}\n\nfunction originAgentCluster() {\n  return function originAgentClusterMiddleware(_req, res, next) {\n    res.setHeader(\"Origin-Agent-Cluster\", \"?1\");\n    next();\n  };\n}\n\nconst ALLOWED_TOKENS = new Set([\"no-referrer\", \"no-referrer-when-downgrade\", \"same-origin\", \"origin\", \"strict-origin\", \"origin-when-cross-origin\", \"strict-origin-when-cross-origin\", \"unsafe-url\", \"\"]);\n\nfunction getHeaderValueFromOptions$3(_ref5) {\n  let {\n    policy = [\"no-referrer\"]\n  } = _ref5;\n  const tokens = typeof policy === \"string\" ? [policy] : policy;\n\n  if (tokens.length === 0) {\n    throw new Error(\"Referrer-Policy received no policy tokens\");\n  }\n\n  const tokensSeen = new Set();\n  tokens.forEach(token => {\n    if (!ALLOWED_TOKENS.has(token)) {\n      throw new Error(`Referrer-Policy received an unexpected policy token ${JSON.stringify(token)}`);\n    } else if (tokensSeen.has(token)) {\n      throw new Error(`Referrer-Policy received a duplicate policy token ${JSON.stringify(token)}`);\n    }\n\n    tokensSeen.add(token);\n  });\n  return tokens.join(\",\");\n}\n\nfunction referrerPolicy() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$3(options);\n  return function referrerPolicyMiddleware(_req, res, next) {\n    res.setHeader(\"Referrer-Policy\", headerValue);\n    next();\n  };\n}\n\nconst DEFAULT_MAX_AGE = 180 * 24 * 60 * 60;\n\nfunction parseMaxAge() {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_MAX_AGE;\n\n  if (value >= 0 && Number.isFinite(value)) {\n    return Math.floor(value);\n  } else {\n    throw new Error(`Strict-Transport-Security: ${JSON.stringify(value)} is not a valid value for maxAge. Please choose a positive integer.`);\n  }\n}\n\nfunction getHeaderValueFromOptions$2(options) {\n  if (\"maxage\" in options) {\n    throw new Error(\"Strict-Transport-Security received an unsupported property, `maxage`. Did you mean to pass `maxAge`?\");\n  }\n\n  if (\"includeSubdomains\" in options) {\n    console.warn('Strict-Transport-Security middleware should use `includeSubDomains` instead of `includeSubdomains`. (The correct one has an uppercase \"D\".)');\n  }\n\n  if (\"setIf\" in options) {\n    console.warn(\"Strict-Transport-Security middleware no longer supports the `setIf` parameter. See the documentation and <https://github.com/helmetjs/helmet/wiki/Conditionally-using-middleware> if you need help replicating this behavior.\");\n  }\n\n  const directives = [`max-age=${parseMaxAge(options.maxAge)}`];\n\n  if (options.includeSubDomains === undefined || options.includeSubDomains) {\n    directives.push(\"includeSubDomains\");\n  }\n\n  if (options.preload) {\n    directives.push(\"preload\");\n  }\n\n  return directives.join(\"; \");\n}\n\nfunction strictTransportSecurity() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$2(options);\n  return function strictTransportSecurityMiddleware(_req, res, next) {\n    res.setHeader(\"Strict-Transport-Security\", headerValue);\n    next();\n  };\n}\n\nfunction xContentTypeOptions() {\n  return function xContentTypeOptionsMiddleware(_req, res, next) {\n    res.setHeader(\"X-Content-Type-Options\", \"nosniff\");\n    next();\n  };\n}\n\nfunction xDnsPrefetchControl() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = options.allow ? \"on\" : \"off\";\n  return function xDnsPrefetchControlMiddleware(_req, res, next) {\n    res.setHeader(\"X-DNS-Prefetch-Control\", headerValue);\n    next();\n  };\n}\n\nfunction xDownloadOptions() {\n  return function xDownloadOptionsMiddleware(_req, res, next) {\n    res.setHeader(\"X-Download-Options\", \"noopen\");\n    next();\n  };\n}\n\nfunction getHeaderValueFromOptions$1(_ref6) {\n  let {\n    action = \"sameorigin\"\n  } = _ref6;\n  const normalizedAction = typeof action === \"string\" ? action.toUpperCase() : action;\n\n  switch (normalizedAction) {\n    case \"SAME-ORIGIN\":\n      return \"SAMEORIGIN\";\n\n    case \"DENY\":\n    case \"SAMEORIGIN\":\n      return normalizedAction;\n\n    default:\n      throw new Error(`X-Frame-Options received an invalid action ${JSON.stringify(action)}`);\n  }\n}\n\nfunction xFrameOptions() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions$1(options);\n  return function xFrameOptionsMiddleware(_req, res, next) {\n    res.setHeader(\"X-Frame-Options\", headerValue);\n    next();\n  };\n}\n\nconst ALLOWED_PERMITTED_POLICIES = new Set([\"none\", \"master-only\", \"by-content-type\", \"all\"]);\n\nfunction getHeaderValueFromOptions(_ref7) {\n  let {\n    permittedPolicies = \"none\"\n  } = _ref7;\n\n  if (ALLOWED_PERMITTED_POLICIES.has(permittedPolicies)) {\n    return permittedPolicies;\n  } else {\n    throw new Error(`X-Permitted-Cross-Domain-Policies does not support ${JSON.stringify(permittedPolicies)}`);\n  }\n}\n\nfunction xPermittedCrossDomainPolicies() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headerValue = getHeaderValueFromOptions(options);\n  return function xPermittedCrossDomainPoliciesMiddleware(_req, res, next) {\n    res.setHeader(\"X-Permitted-Cross-Domain-Policies\", headerValue);\n    next();\n  };\n}\n\nfunction xPoweredBy() {\n  return function xPoweredByMiddleware(_req, res, next) {\n    res.removeHeader(\"X-Powered-By\");\n    next();\n  };\n}\n\nfunction xXssProtection() {\n  return function xXssProtectionMiddleware(_req, res, next) {\n    res.setHeader(\"X-XSS-Protection\", \"0\");\n    next();\n  };\n}\n\nfunction getArgs(option) {\n  let middlewareConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (option) {\n    case undefined:\n    case true:\n      return [];\n\n    case false:\n      return null;\n\n    default:\n      if (middlewareConfig.takesOptions === false) {\n        console.warn(`${middlewareConfig.name} does not take options. Remove the property to silence this warning.`);\n        return [];\n      } else {\n        return [option];\n      }\n\n  }\n}\n\nfunction getMiddlewareFunctionsFromOptions(options) {\n  const result = [];\n  const contentSecurityPolicyArgs = getArgs(options.contentSecurityPolicy);\n\n  if (contentSecurityPolicyArgs) {\n    result.push(contentSecurityPolicy(...contentSecurityPolicyArgs));\n  }\n\n  const crossOriginEmbedderPolicyArgs = getArgs(options.crossOriginEmbedderPolicy);\n\n  if (crossOriginEmbedderPolicyArgs) {\n    result.push(crossOriginEmbedderPolicy(...crossOriginEmbedderPolicyArgs));\n  }\n\n  const crossOriginOpenerPolicyArgs = getArgs(options.crossOriginOpenerPolicy);\n\n  if (crossOriginOpenerPolicyArgs) {\n    result.push(crossOriginOpenerPolicy(...crossOriginOpenerPolicyArgs));\n  }\n\n  const crossOriginResourcePolicyArgs = getArgs(options.crossOriginResourcePolicy);\n\n  if (crossOriginResourcePolicyArgs) {\n    result.push(crossOriginResourcePolicy(...crossOriginResourcePolicyArgs));\n  }\n\n  const xDnsPrefetchControlArgs = getArgs(options.dnsPrefetchControl);\n\n  if (xDnsPrefetchControlArgs) {\n    result.push(xDnsPrefetchControl(...xDnsPrefetchControlArgs));\n  }\n\n  const expectCtArgs = options.expectCt && getArgs(options.expectCt);\n\n  if (expectCtArgs) {\n    result.push(expectCt(...expectCtArgs));\n  }\n\n  const xFrameOptionsArgs = getArgs(options.frameguard);\n\n  if (xFrameOptionsArgs) {\n    result.push(xFrameOptions(...xFrameOptionsArgs));\n  }\n\n  const xPoweredByArgs = getArgs(options.hidePoweredBy, {\n    name: \"hidePoweredBy\",\n    takesOptions: false\n  });\n\n  if (xPoweredByArgs) {\n    result.push(xPoweredBy());\n  }\n\n  const strictTransportSecurityArgs = getArgs(options.hsts);\n\n  if (strictTransportSecurityArgs) {\n    result.push(strictTransportSecurity(...strictTransportSecurityArgs));\n  }\n\n  const xDownloadOptionsArgs = getArgs(options.ieNoOpen, {\n    name: \"ieNoOpen\",\n    takesOptions: false\n  });\n\n  if (xDownloadOptionsArgs) {\n    result.push(xDownloadOptions());\n  }\n\n  const xContentTypeOptionsArgs = getArgs(options.noSniff, {\n    name: \"noSniff\",\n    takesOptions: false\n  });\n\n  if (xContentTypeOptionsArgs) {\n    result.push(xContentTypeOptions());\n  }\n\n  const originAgentClusterArgs = getArgs(options.originAgentCluster, {\n    name: \"originAgentCluster\",\n    takesOptions: false\n  });\n\n  if (originAgentClusterArgs) {\n    result.push(originAgentCluster());\n  }\n\n  const xPermittedCrossDomainPoliciesArgs = getArgs(options.permittedCrossDomainPolicies);\n\n  if (xPermittedCrossDomainPoliciesArgs) {\n    result.push(xPermittedCrossDomainPolicies(...xPermittedCrossDomainPoliciesArgs));\n  }\n\n  const referrerPolicyArgs = getArgs(options.referrerPolicy);\n\n  if (referrerPolicyArgs) {\n    result.push(referrerPolicy(...referrerPolicyArgs));\n  }\n\n  const xXssProtectionArgs = getArgs(options.xssFilter, {\n    name: \"xssFilter\",\n    takesOptions: false\n  });\n\n  if (xXssProtectionArgs) {\n    result.push(xXssProtection());\n  }\n\n  return result;\n}\n\nconst helmet = Object.assign(function helmet() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _a;\n\n  if (((_a = options.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"IncomingMessage\") {\n    throw new Error(\"It appears you have done something like `app.use(helmet)`, but it should be `app.use(helmet())`.\");\n  }\n\n  const middlewareFunctions = getMiddlewareFunctionsFromOptions(options);\n  return function helmetMiddleware(req, res, next) {\n    let middlewareIndex = 0;\n\n    (function internalNext(err) {\n      if (err) {\n        next(err);\n        return;\n      }\n\n      const middlewareFunction = middlewareFunctions[middlewareIndex];\n\n      if (middlewareFunction) {\n        middlewareIndex++;\n        middlewareFunction(req, res, internalNext);\n      } else {\n        next();\n      }\n    })();\n  };\n}, {\n  contentSecurityPolicy,\n  crossOriginEmbedderPolicy,\n  crossOriginOpenerPolicy,\n  crossOriginResourcePolicy,\n  dnsPrefetchControl: xDnsPrefetchControl,\n  expectCt,\n  frameguard: xFrameOptions,\n  hidePoweredBy: xPoweredBy,\n  hsts: strictTransportSecurity,\n  ieNoOpen: xDownloadOptions,\n  noSniff: xContentTypeOptions,\n  originAgentCluster,\n  permittedCrossDomainPolicies: xPermittedCrossDomainPolicies,\n  referrerPolicy,\n  xssFilter: xXssProtection\n});\nexport { contentSecurityPolicy, crossOriginEmbedderPolicy, crossOriginOpenerPolicy, crossOriginResourcePolicy, helmet as default, xDnsPrefetchControl as dnsPrefetchControl, expectCt, xFrameOptions as frameguard, xPoweredBy as hidePoweredBy, strictTransportSecurity as hsts, xDownloadOptions as ieNoOpen, xContentTypeOptions as noSniff, originAgentCluster, xPermittedCrossDomainPolicies as permittedCrossDomainPolicies, referrerPolicy, xXssProtection as xssFilter };","map":{"version":3,"names":["dangerouslyDisableDefaultSrc","Symbol","DEFAULT_DIRECTIVES","getDefaultDirectives","Object","assign","dashify","str","replace","capitalLetter","toLowerCase","isDirectiveValueInvalid","directiveValue","test","has","obj","key","prototype","hasOwnProperty","call","normalizeDirectives","options","defaultDirectives","useDefaults","directives","rawDirectives","result","Map","directiveNamesSeen","Set","directivesExplicitlyDisabled","rawDirectiveName","length","Error","JSON","stringify","directiveName","add","rawDirectiveValue","element","set","entries","forEach","defaultDirectiveName","defaultDirectiveValue","size","getHeaderValue","req","res","normalizedDirectives","err","Function","push","join","contentSecurityPolicy","headerName","reportOnly","contentSecurityPolicyMiddleware","next","setHeader","ALLOWED_POLICIES$2","getHeaderValueFromOptions$7","policy","crossOriginEmbedderPolicy","headerValue","crossOriginEmbedderPolicyMiddleware","_req","ALLOWED_POLICIES$1","getHeaderValueFromOptions$6","crossOriginOpenerPolicy","crossOriginOpenerPolicyMiddleware","ALLOWED_POLICIES","getHeaderValueFromOptions$5","crossOriginResourcePolicy","crossOriginResourcePolicyMiddleware","parseMaxAge$1","value","Number","isFinite","Math","floor","getHeaderValueFromOptions$4","maxAge","enforce","reportUri","expectCt","expectCtMiddleware","originAgentCluster","originAgentClusterMiddleware","ALLOWED_TOKENS","getHeaderValueFromOptions$3","tokens","tokensSeen","token","referrerPolicy","referrerPolicyMiddleware","DEFAULT_MAX_AGE","parseMaxAge","getHeaderValueFromOptions$2","console","warn","includeSubDomains","undefined","preload","strictTransportSecurity","strictTransportSecurityMiddleware","xContentTypeOptions","xContentTypeOptionsMiddleware","xDnsPrefetchControl","allow","xDnsPrefetchControlMiddleware","xDownloadOptions","xDownloadOptionsMiddleware","getHeaderValueFromOptions$1","action","normalizedAction","toUpperCase","xFrameOptions","xFrameOptionsMiddleware","ALLOWED_PERMITTED_POLICIES","getHeaderValueFromOptions","permittedPolicies","xPermittedCrossDomainPolicies","xPermittedCrossDomainPoliciesMiddleware","xPoweredBy","xPoweredByMiddleware","removeHeader","xXssProtection","xXssProtectionMiddleware","getArgs","option","middlewareConfig","takesOptions","name","getMiddlewareFunctionsFromOptions","contentSecurityPolicyArgs","crossOriginEmbedderPolicyArgs","crossOriginOpenerPolicyArgs","crossOriginResourcePolicyArgs","xDnsPrefetchControlArgs","dnsPrefetchControl","expectCtArgs","xFrameOptionsArgs","frameguard","xPoweredByArgs","hidePoweredBy","strictTransportSecurityArgs","hsts","xDownloadOptionsArgs","ieNoOpen","xContentTypeOptionsArgs","noSniff","originAgentClusterArgs","xPermittedCrossDomainPoliciesArgs","permittedCrossDomainPolicies","referrerPolicyArgs","xXssProtectionArgs","xssFilter","helmet","_a","constructor","middlewareFunctions","helmetMiddleware","middlewareIndex","internalNext","middlewareFunction","default"],"sources":["/Users/kristin/Desktop/hotel-prins-carl/frontend/node_modules/helmet/dist/esm/index.js"],"sourcesContent":["const dangerouslyDisableDefaultSrc = Symbol(\"dangerouslyDisableDefaultSrc\")\nconst DEFAULT_DIRECTIVES = {\n\t\"default-src\": [\"'self'\"],\n\t\"base-uri\": [\"'self'\"],\n\t\"font-src\": [\"'self'\", \"https:\", \"data:\"],\n\t\"form-action\": [\"'self'\"],\n\t\"frame-ancestors\": [\"'self'\"],\n\t\"img-src\": [\"'self'\", \"data:\"],\n\t\"object-src\": [\"'none'\"],\n\t\"script-src\": [\"'self'\"],\n\t\"script-src-attr\": [\"'none'\"],\n\t\"style-src\": [\"'self'\", \"https:\", \"'unsafe-inline'\"],\n\t\"upgrade-insecure-requests\": []\n}\nconst getDefaultDirectives = () => Object.assign({}, DEFAULT_DIRECTIVES)\nconst dashify = str => str.replace(/[A-Z]/g, capitalLetter => \"-\" + capitalLetter.toLowerCase())\nconst isDirectiveValueInvalid = directiveValue => /;|,/.test(directiveValue)\nconst has = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\nfunction normalizeDirectives(options) {\n\tconst defaultDirectives = getDefaultDirectives()\n\tconst { useDefaults = true, directives: rawDirectives = defaultDirectives } = options\n\tconst result = new Map()\n\tconst directiveNamesSeen = new Set()\n\tconst directivesExplicitlyDisabled = new Set()\n\tfor (const rawDirectiveName in rawDirectives) {\n\t\tif (!has(rawDirectives, rawDirectiveName)) {\n\t\t\tcontinue\n\t\t}\n\t\tif (rawDirectiveName.length === 0 || /[^a-zA-Z0-9-]/.test(rawDirectiveName)) {\n\t\t\tthrow new Error(`Content-Security-Policy received an invalid directive name ${JSON.stringify(rawDirectiveName)}`)\n\t\t}\n\t\tconst directiveName = dashify(rawDirectiveName)\n\t\tif (directiveNamesSeen.has(directiveName)) {\n\t\t\tthrow new Error(`Content-Security-Policy received a duplicate directive ${JSON.stringify(directiveName)}`)\n\t\t}\n\t\tdirectiveNamesSeen.add(directiveName)\n\t\tconst rawDirectiveValue = rawDirectives[rawDirectiveName]\n\t\tlet directiveValue\n\t\tif (rawDirectiveValue === null) {\n\t\t\tif (directiveName === \"default-src\") {\n\t\t\t\tthrow new Error(\"Content-Security-Policy needs a default-src but it was set to `null`. If you really want to disable it, set it to `contentSecurityPolicy.dangerouslyDisableDefaultSrc`.\")\n\t\t\t}\n\t\t\tdirectivesExplicitlyDisabled.add(directiveName)\n\t\t\tcontinue\n\t\t} else if (typeof rawDirectiveValue === \"string\") {\n\t\t\tdirectiveValue = [rawDirectiveValue]\n\t\t} else if (!rawDirectiveValue) {\n\t\t\tthrow new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`)\n\t\t} else if (rawDirectiveValue === dangerouslyDisableDefaultSrc) {\n\t\t\tif (directiveName === \"default-src\") {\n\t\t\t\tdirectivesExplicitlyDisabled.add(\"default-src\")\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Content-Security-Policy: tried to disable ${JSON.stringify(directiveName)} as if it were default-src; simply omit the key`)\n\t\t\t}\n\t\t} else {\n\t\t\tdirectiveValue = rawDirectiveValue\n\t\t}\n\t\tfor (const element of directiveValue) {\n\t\t\tif (typeof element === \"string\" && isDirectiveValueInvalid(element)) {\n\t\t\t\tthrow new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`)\n\t\t\t}\n\t\t}\n\t\tresult.set(directiveName, directiveValue)\n\t}\n\tif (useDefaults) {\n\t\tObject.entries(defaultDirectives).forEach(([defaultDirectiveName, defaultDirectiveValue]) => {\n\t\t\tif (!result.has(defaultDirectiveName) && !directivesExplicitlyDisabled.has(defaultDirectiveName)) {\n\t\t\t\tresult.set(defaultDirectiveName, defaultDirectiveValue)\n\t\t\t}\n\t\t})\n\t}\n\tif (!result.size) {\n\t\tthrow new Error(\"Content-Security-Policy has no directives. Either set some or disable the header\")\n\t}\n\tif (!result.has(\"default-src\") && !directivesExplicitlyDisabled.has(\"default-src\")) {\n\t\tthrow new Error(\"Content-Security-Policy needs a default-src but none was provided. If you really want to disable it, set it to `contentSecurityPolicy.dangerouslyDisableDefaultSrc`.\")\n\t}\n\treturn result\n}\nfunction getHeaderValue(req, res, normalizedDirectives) {\n\tlet err\n\tconst result = []\n\tnormalizedDirectives.forEach((rawDirectiveValue, directiveName) => {\n\t\tlet directiveValue = \"\"\n\t\tfor (const element of rawDirectiveValue) {\n\t\t\tdirectiveValue += \" \" + (element instanceof Function ? element(req, res) : element)\n\t\t}\n\t\tif (!directiveValue) {\n\t\t\tresult.push(directiveName)\n\t\t} else if (isDirectiveValueInvalid(directiveValue)) {\n\t\t\terr = new Error(`Content-Security-Policy received an invalid directive value for ${JSON.stringify(directiveName)}`)\n\t\t} else {\n\t\t\tresult.push(`${directiveName}${directiveValue}`)\n\t\t}\n\t})\n\treturn err ? err : result.join(\";\")\n}\nconst contentSecurityPolicy = function contentSecurityPolicy(options = {}) {\n\tconst headerName = options.reportOnly ? \"Content-Security-Policy-Report-Only\" : \"Content-Security-Policy\"\n\tconst normalizedDirectives = normalizeDirectives(options)\n\treturn function contentSecurityPolicyMiddleware(req, res, next) {\n\t\tconst result = getHeaderValue(req, res, normalizedDirectives)\n\t\tif (result instanceof Error) {\n\t\t\tnext(result)\n\t\t} else {\n\t\t\tres.setHeader(headerName, result)\n\t\t\tnext()\n\t\t}\n\t}\n}\ncontentSecurityPolicy.getDefaultDirectives = getDefaultDirectives\ncontentSecurityPolicy.dangerouslyDisableDefaultSrc = dangerouslyDisableDefaultSrc\n\nconst ALLOWED_POLICIES$2 = new Set([\"require-corp\", \"credentialless\"])\nfunction getHeaderValueFromOptions$7({ policy = \"require-corp\" }) {\n\tif (ALLOWED_POLICIES$2.has(policy)) {\n\t\treturn policy\n\t} else {\n\t\tthrow new Error(`Cross-Origin-Embedder-Policy does not support the ${JSON.stringify(policy)} policy`)\n\t}\n}\nfunction crossOriginEmbedderPolicy(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$7(options)\n\treturn function crossOriginEmbedderPolicyMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Cross-Origin-Embedder-Policy\", headerValue)\n\t\tnext()\n\t}\n}\n\nconst ALLOWED_POLICIES$1 = new Set([\"same-origin\", \"same-origin-allow-popups\", \"unsafe-none\"])\nfunction getHeaderValueFromOptions$6({ policy = \"same-origin\" }) {\n\tif (ALLOWED_POLICIES$1.has(policy)) {\n\t\treturn policy\n\t} else {\n\t\tthrow new Error(`Cross-Origin-Opener-Policy does not support the ${JSON.stringify(policy)} policy`)\n\t}\n}\nfunction crossOriginOpenerPolicy(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$6(options)\n\treturn function crossOriginOpenerPolicyMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Cross-Origin-Opener-Policy\", headerValue)\n\t\tnext()\n\t}\n}\n\nconst ALLOWED_POLICIES = new Set([\"same-origin\", \"same-site\", \"cross-origin\"])\nfunction getHeaderValueFromOptions$5({ policy = \"same-origin\" }) {\n\tif (ALLOWED_POLICIES.has(policy)) {\n\t\treturn policy\n\t} else {\n\t\tthrow new Error(`Cross-Origin-Resource-Policy does not support the ${JSON.stringify(policy)} policy`)\n\t}\n}\nfunction crossOriginResourcePolicy(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$5(options)\n\treturn function crossOriginResourcePolicyMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Cross-Origin-Resource-Policy\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction parseMaxAge$1(value = 0) {\n\tif (value >= 0 && Number.isFinite(value)) {\n\t\treturn Math.floor(value)\n\t} else {\n\t\tthrow new Error(`Expect-CT: ${JSON.stringify(value)} is not a valid value for maxAge. Please choose a positive integer.`)\n\t}\n}\nfunction getHeaderValueFromOptions$4(options) {\n\tconst directives = [`max-age=${parseMaxAge$1(options.maxAge)}`]\n\tif (options.enforce) {\n\t\tdirectives.push(\"enforce\")\n\t}\n\tif (options.reportUri) {\n\t\tdirectives.push(`report-uri=\"${options.reportUri}\"`)\n\t}\n\treturn directives.join(\", \")\n}\nfunction expectCt(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$4(options)\n\treturn function expectCtMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Expect-CT\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction originAgentCluster() {\n\treturn function originAgentClusterMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Origin-Agent-Cluster\", \"?1\")\n\t\tnext()\n\t}\n}\n\nconst ALLOWED_TOKENS = new Set([\"no-referrer\", \"no-referrer-when-downgrade\", \"same-origin\", \"origin\", \"strict-origin\", \"origin-when-cross-origin\", \"strict-origin-when-cross-origin\", \"unsafe-url\", \"\"])\nfunction getHeaderValueFromOptions$3({ policy = [\"no-referrer\"] }) {\n\tconst tokens = typeof policy === \"string\" ? [policy] : policy\n\tif (tokens.length === 0) {\n\t\tthrow new Error(\"Referrer-Policy received no policy tokens\")\n\t}\n\tconst tokensSeen = new Set()\n\ttokens.forEach(token => {\n\t\tif (!ALLOWED_TOKENS.has(token)) {\n\t\t\tthrow new Error(`Referrer-Policy received an unexpected policy token ${JSON.stringify(token)}`)\n\t\t} else if (tokensSeen.has(token)) {\n\t\t\tthrow new Error(`Referrer-Policy received a duplicate policy token ${JSON.stringify(token)}`)\n\t\t}\n\t\ttokensSeen.add(token)\n\t})\n\treturn tokens.join(\",\")\n}\nfunction referrerPolicy(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$3(options)\n\treturn function referrerPolicyMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Referrer-Policy\", headerValue)\n\t\tnext()\n\t}\n}\n\nconst DEFAULT_MAX_AGE = 180 * 24 * 60 * 60\nfunction parseMaxAge(value = DEFAULT_MAX_AGE) {\n\tif (value >= 0 && Number.isFinite(value)) {\n\t\treturn Math.floor(value)\n\t} else {\n\t\tthrow new Error(`Strict-Transport-Security: ${JSON.stringify(value)} is not a valid value for maxAge. Please choose a positive integer.`)\n\t}\n}\nfunction getHeaderValueFromOptions$2(options) {\n\tif (\"maxage\" in options) {\n\t\tthrow new Error(\"Strict-Transport-Security received an unsupported property, `maxage`. Did you mean to pass `maxAge`?\")\n\t}\n\tif (\"includeSubdomains\" in options) {\n\t\tconsole.warn('Strict-Transport-Security middleware should use `includeSubDomains` instead of `includeSubdomains`. (The correct one has an uppercase \"D\".)')\n\t}\n\tif (\"setIf\" in options) {\n\t\tconsole.warn(\"Strict-Transport-Security middleware no longer supports the `setIf` parameter. See the documentation and <https://github.com/helmetjs/helmet/wiki/Conditionally-using-middleware> if you need help replicating this behavior.\")\n\t}\n\tconst directives = [`max-age=${parseMaxAge(options.maxAge)}`]\n\tif (options.includeSubDomains === undefined || options.includeSubDomains) {\n\t\tdirectives.push(\"includeSubDomains\")\n\t}\n\tif (options.preload) {\n\t\tdirectives.push(\"preload\")\n\t}\n\treturn directives.join(\"; \")\n}\nfunction strictTransportSecurity(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$2(options)\n\treturn function strictTransportSecurityMiddleware(_req, res, next) {\n\t\tres.setHeader(\"Strict-Transport-Security\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction xContentTypeOptions() {\n\treturn function xContentTypeOptionsMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-Content-Type-Options\", \"nosniff\")\n\t\tnext()\n\t}\n}\n\nfunction xDnsPrefetchControl(options = {}) {\n\tconst headerValue = options.allow ? \"on\" : \"off\"\n\treturn function xDnsPrefetchControlMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-DNS-Prefetch-Control\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction xDownloadOptions() {\n\treturn function xDownloadOptionsMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-Download-Options\", \"noopen\")\n\t\tnext()\n\t}\n}\n\nfunction getHeaderValueFromOptions$1({ action = \"sameorigin\" }) {\n\tconst normalizedAction = typeof action === \"string\" ? action.toUpperCase() : action\n\tswitch (normalizedAction) {\n\t\tcase \"SAME-ORIGIN\":\n\t\t\treturn \"SAMEORIGIN\"\n\t\tcase \"DENY\":\n\t\tcase \"SAMEORIGIN\":\n\t\t\treturn normalizedAction\n\t\tdefault:\n\t\t\tthrow new Error(`X-Frame-Options received an invalid action ${JSON.stringify(action)}`)\n\t}\n}\nfunction xFrameOptions(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions$1(options)\n\treturn function xFrameOptionsMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-Frame-Options\", headerValue)\n\t\tnext()\n\t}\n}\n\nconst ALLOWED_PERMITTED_POLICIES = new Set([\"none\", \"master-only\", \"by-content-type\", \"all\"])\nfunction getHeaderValueFromOptions({ permittedPolicies = \"none\" }) {\n\tif (ALLOWED_PERMITTED_POLICIES.has(permittedPolicies)) {\n\t\treturn permittedPolicies\n\t} else {\n\t\tthrow new Error(`X-Permitted-Cross-Domain-Policies does not support ${JSON.stringify(permittedPolicies)}`)\n\t}\n}\nfunction xPermittedCrossDomainPolicies(options = {}) {\n\tconst headerValue = getHeaderValueFromOptions(options)\n\treturn function xPermittedCrossDomainPoliciesMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-Permitted-Cross-Domain-Policies\", headerValue)\n\t\tnext()\n\t}\n}\n\nfunction xPoweredBy() {\n\treturn function xPoweredByMiddleware(_req, res, next) {\n\t\tres.removeHeader(\"X-Powered-By\")\n\t\tnext()\n\t}\n}\n\nfunction xXssProtection() {\n\treturn function xXssProtectionMiddleware(_req, res, next) {\n\t\tres.setHeader(\"X-XSS-Protection\", \"0\")\n\t\tnext()\n\t}\n}\n\nfunction getArgs(option, middlewareConfig = {}) {\n\tswitch (option) {\n\t\tcase undefined:\n\t\tcase true:\n\t\t\treturn []\n\t\tcase false:\n\t\t\treturn null\n\t\tdefault:\n\t\t\tif (middlewareConfig.takesOptions === false) {\n\t\t\t\tconsole.warn(`${middlewareConfig.name} does not take options. Remove the property to silence this warning.`)\n\t\t\t\treturn []\n\t\t\t} else {\n\t\t\t\treturn [option]\n\t\t\t}\n\t}\n}\nfunction getMiddlewareFunctionsFromOptions(options) {\n\tconst result = []\n\tconst contentSecurityPolicyArgs = getArgs(options.contentSecurityPolicy)\n\tif (contentSecurityPolicyArgs) {\n\t\tresult.push(contentSecurityPolicy(...contentSecurityPolicyArgs))\n\t}\n\tconst crossOriginEmbedderPolicyArgs = getArgs(options.crossOriginEmbedderPolicy)\n\tif (crossOriginEmbedderPolicyArgs) {\n\t\tresult.push(crossOriginEmbedderPolicy(...crossOriginEmbedderPolicyArgs))\n\t}\n\tconst crossOriginOpenerPolicyArgs = getArgs(options.crossOriginOpenerPolicy)\n\tif (crossOriginOpenerPolicyArgs) {\n\t\tresult.push(crossOriginOpenerPolicy(...crossOriginOpenerPolicyArgs))\n\t}\n\tconst crossOriginResourcePolicyArgs = getArgs(options.crossOriginResourcePolicy)\n\tif (crossOriginResourcePolicyArgs) {\n\t\tresult.push(crossOriginResourcePolicy(...crossOriginResourcePolicyArgs))\n\t}\n\tconst xDnsPrefetchControlArgs = getArgs(options.dnsPrefetchControl)\n\tif (xDnsPrefetchControlArgs) {\n\t\tresult.push(xDnsPrefetchControl(...xDnsPrefetchControlArgs))\n\t}\n\tconst expectCtArgs = options.expectCt && getArgs(options.expectCt)\n\tif (expectCtArgs) {\n\t\tresult.push(expectCt(...expectCtArgs))\n\t}\n\tconst xFrameOptionsArgs = getArgs(options.frameguard)\n\tif (xFrameOptionsArgs) {\n\t\tresult.push(xFrameOptions(...xFrameOptionsArgs))\n\t}\n\tconst xPoweredByArgs = getArgs(options.hidePoweredBy, {\n\t\tname: \"hidePoweredBy\",\n\t\ttakesOptions: false\n\t})\n\tif (xPoweredByArgs) {\n\t\tresult.push(xPoweredBy())\n\t}\n\tconst strictTransportSecurityArgs = getArgs(options.hsts)\n\tif (strictTransportSecurityArgs) {\n\t\tresult.push(strictTransportSecurity(...strictTransportSecurityArgs))\n\t}\n\tconst xDownloadOptionsArgs = getArgs(options.ieNoOpen, {\n\t\tname: \"ieNoOpen\",\n\t\ttakesOptions: false\n\t})\n\tif (xDownloadOptionsArgs) {\n\t\tresult.push(xDownloadOptions())\n\t}\n\tconst xContentTypeOptionsArgs = getArgs(options.noSniff, {\n\t\tname: \"noSniff\",\n\t\ttakesOptions: false\n\t})\n\tif (xContentTypeOptionsArgs) {\n\t\tresult.push(xContentTypeOptions())\n\t}\n\tconst originAgentClusterArgs = getArgs(options.originAgentCluster, {\n\t\tname: \"originAgentCluster\",\n\t\ttakesOptions: false\n\t})\n\tif (originAgentClusterArgs) {\n\t\tresult.push(originAgentCluster())\n\t}\n\tconst xPermittedCrossDomainPoliciesArgs = getArgs(options.permittedCrossDomainPolicies)\n\tif (xPermittedCrossDomainPoliciesArgs) {\n\t\tresult.push(xPermittedCrossDomainPolicies(...xPermittedCrossDomainPoliciesArgs))\n\t}\n\tconst referrerPolicyArgs = getArgs(options.referrerPolicy)\n\tif (referrerPolicyArgs) {\n\t\tresult.push(referrerPolicy(...referrerPolicyArgs))\n\t}\n\tconst xXssProtectionArgs = getArgs(options.xssFilter, {\n\t\tname: \"xssFilter\",\n\t\ttakesOptions: false\n\t})\n\tif (xXssProtectionArgs) {\n\t\tresult.push(xXssProtection())\n\t}\n\treturn result\n}\nconst helmet = Object.assign(\n\tfunction helmet(options = {}) {\n\t\tvar _a\n\t\tif (((_a = options.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"IncomingMessage\") {\n\t\t\tthrow new Error(\"It appears you have done something like `app.use(helmet)`, but it should be `app.use(helmet())`.\")\n\t\t}\n\t\tconst middlewareFunctions = getMiddlewareFunctionsFromOptions(options)\n\t\treturn function helmetMiddleware(req, res, next) {\n\t\t\tlet middlewareIndex = 0\n\t\t\t;(function internalNext(err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tnext(err)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst middlewareFunction = middlewareFunctions[middlewareIndex]\n\t\t\t\tif (middlewareFunction) {\n\t\t\t\t\tmiddlewareIndex++\n\t\t\t\t\tmiddlewareFunction(req, res, internalNext)\n\t\t\t\t} else {\n\t\t\t\t\tnext()\n\t\t\t\t}\n\t\t\t})()\n\t\t}\n\t},\n\t{\n\t\tcontentSecurityPolicy,\n\t\tcrossOriginEmbedderPolicy,\n\t\tcrossOriginOpenerPolicy,\n\t\tcrossOriginResourcePolicy,\n\t\tdnsPrefetchControl: xDnsPrefetchControl,\n\t\texpectCt,\n\t\tframeguard: xFrameOptions,\n\t\thidePoweredBy: xPoweredBy,\n\t\thsts: strictTransportSecurity,\n\t\tieNoOpen: xDownloadOptions,\n\t\tnoSniff: xContentTypeOptions,\n\t\toriginAgentCluster,\n\t\tpermittedCrossDomainPolicies: xPermittedCrossDomainPolicies,\n\t\treferrerPolicy,\n\t\txssFilter: xXssProtection\n\t}\n)\n\nexport { contentSecurityPolicy, crossOriginEmbedderPolicy, crossOriginOpenerPolicy, crossOriginResourcePolicy, helmet as default, xDnsPrefetchControl as dnsPrefetchControl, expectCt, xFrameOptions as frameguard, xPoweredBy as hidePoweredBy, strictTransportSecurity as hsts, xDownloadOptions as ieNoOpen, xContentTypeOptions as noSniff, originAgentCluster, xPermittedCrossDomainPolicies as permittedCrossDomainPolicies, referrerPolicy, xXssProtection as xssFilter }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}